package MainForm;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rayleigh Thai
 */
public class guicustomer extends javax.swing.JFrame {
    int cid = 2;
    public guicustomer() {
        initComponents();
        
        welcometop.setText("Welcome [USERNAME HERE]");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainMenu = new javax.swing.JButton();
        AddtoCart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btitle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bgenre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        byear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bauthor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        avail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        isbn = new javax.swing.JTextField();
        refreshButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bidlist = new javax.swing.JTable();
        genrebox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartList = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        checkout = new javax.swing.JButton();
        welcometop = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));

        MainMenu.setText("Main Menu");
        MainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainMenuActionPerformed(evt);
            }
        });

        AddtoCart.setText("Add to Cart");
        AddtoCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddtoCartActionPerformed(evt);
            }
        });

        jLabel1.setText("Book Tiltle: ");
        jLabel1.setToolTipText("");

        btitle.setEditable(false);

        jLabel2.setText("Book Genre: ");
        jLabel2.setToolTipText("");

        bgenre.setEditable(false);

        jLabel3.setText("Published Year: ");
        jLabel3.setToolTipText("");

        byear.setEditable(false);

        jLabel4.setText("Author: ");
        jLabel4.setToolTipText("");

        bauthor.setEditable(false);

        jLabel5.setText("Availability");
        jLabel5.setToolTipText("");

        avail.setEditable(false);

        jLabel6.setText("Book ISBN: ");
        jLabel6.setToolTipText("");

        isbn.setEditable(false);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        bidlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Book Title", "Author"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bidlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bidlistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bidlist);

        genrebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreboxActionPerformed(evt);
            }
        });

        jLabel7.setText("Genre: ");

        jScrollPane2.setViewportView(cartList);

        jLabel8.setText("In Your Cart:");

        checkout.setText("Checkout");
        checkout.setActionCommand("checkout");
        checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutActionPerformed(evt);
            }
        });

        welcometop.setEditable(false);
        welcometop.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        welcometop.setText("Welcome");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(welcometop, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(genrebox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addComponent(refreshButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(MainMenu)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddtoCart, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addComponent(checkout, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5))
                                    .addGap(27, 27, 27)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(bgenre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(btitle, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(isbn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(byear, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(bauthor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(avail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcometop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(refreshButton)
                            .addGap(405, 405, 405))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(genrebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(isbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(btitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(bgenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(byear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(bauthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(avail, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddtoCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkout)
                    .addComponent(MainMenu))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void fclose(){
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    private void MainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainMenuActionPerformed
        fclose();
        MainForm menu = new MainForm();
        menu.setVisible(true);
    }//GEN-LAST:event_MainMenuActionPerformed

    
    public void refresh(){
      try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/number_1", "root","");
            String query = "select * from book_status as bs join book as b on bs.b_id = b.b_id";
            Statement sta = connection.createStatement();
            ResultSet rs = sta.executeQuery(query);  
            DefaultTableModel model = (DefaultTableModel) bidlist.getModel();
            loadcombo();
            model.setRowCount(0);
            while (rs.next()) {
                String[] table = new String[3];
                table[0] = rs.getString("b_id");
                table[1] = rs.getString("b_name");
                table[2] = rs.getString("b_author");
                model.addRow(table);
            }
            bidlist.setModel(model);
            connection.close();
        } catch (Exception exception) {
            exception.printStackTrace();
        }
}

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void bidlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bidlistMouseClicked
        //Get the index of the selected item
        int index = bidlist.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) bidlist.getModel();
        String bkname = model.getValueAt(index, 1).toString();
        String bkid = model.getValueAt(index, 0).toString();
        try {
           Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/number_1", "root","");
           String query = "select * from book_status as bs join book as b on bs.b_id = b.b_id where b_name = \"" + bkname + "\" and b.b_id = \"" + bkid + "\" ";
           System.out.println(query);
           Statement sta = connection.createStatement();
           ResultSet rs = sta.executeQuery(query); 
           while(rs.next()) {
                isbn.setText(rs.getString("b_id"));
                btitle.setText(rs.getString("b_name"));
                bauthor.setText(rs.getString("b_author"));
                bgenre.setText(rs.getString("b_genre"));
                avail.setText(rs.getString("exist_in_database"));
                byear.setText(rs.getString("b_year"));
           }
           connection.close();
        } catch (Exception exception) {
                    exception.printStackTrace();
                }
    }//GEN-LAST:event_bidlistMouseClicked

    void loadcombo() {
        try {
           Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/number_1", "root","");
           String query = "select distinct b_genre from book_status as bs join book as b on bs.b_id = b.b_id";
           Statement sta = connection.createStatement();
           ResultSet rs = sta.executeQuery(query); 
           while (rs.next()) {
               genrebox.addItem(rs.getString("b_genre"));
               genrebox.setSelectedItem("");
           }
           connection.close();
        }  catch (Exception exception) {
                    exception.printStackTrace();
                }
    }
    
    private void genreboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genreboxActionPerformed
        String selectedvalue = genrebox.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) bidlist.getModel();
        while (model.getRowCount() >0){
            model.removeRow(0);
        }
        System.out.println(selectedvalue);
        try {
           Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/number_1", "root","");
           String query = "select * from book_status as bs join book as b on bs.b_id = b.b_id where b_genre = '" + selectedvalue + "'";
           System.out.println(query);
           Statement sta = connection.createStatement();
           ResultSet rs = sta.executeQuery(query); 
           while (rs.next()) {
                String[] table = new String[3];
                table[0] = rs.getString("b_id");
                table[1] = rs.getString("b_name");
                table[2] = rs.getString("b_author");
                model.addRow(table);
           }
           bidlist.setModel(model);
           connection.close();
        } catch (Exception exception) {
                    exception.printStackTrace();
                }
    }//GEN-LAST:event_genreboxActionPerformed

    DefaultListModel clist = new DefaultListModel();
    private void AddtoCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddtoCartActionPerformed
        String cisbn = isbn.getText();
        String cbook = btitle.getText();
        String cauthor = bauthor.getText();
        if (cisbn.isBlank()) {
            JOptionPane.showMessageDialog(this, "No Book was selected");
        }
        else {
            String line = cisbn + " - " + cbook + " by " + cauthor;
            System.out.println(clist.getSize());
            for (int i = 1; i <= clist.getSize(); i++) {
                if(line.equals(clist.getElementAt(i-1).toString())) {
                    System.out.println("H634632aere");
                    clist.removeElementAt(i-1);
                    JOptionPane.showMessageDialog(this, "This Book already in Cart!");
                    break;
                }
            }
            cartList.setModel(clist);
            clist.addElement(line);
        }
    }//GEN-LAST:event_AddtoCartActionPerformed
    
    void querytocart(String query) {
        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/number_1", "root", "");
            Statement sta = connection.createStatement();
            sta.executeUpdate(query);
            connection.close();
        } catch (Exception exception) { //catch any exceptions that may have occured
            exception.printStackTrace(); //print any errors
        }
    }
    
    private void checkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutActionPerformed
        // get list of items.
        DefaultListModel cbook = (DefaultListModel) cartList.getModel();
        String line = "Insert into cart values(\"";
        if (cbook.getSize() < 1){
            JOptionPane.showMessageDialog(this, "No book in cart!");
        }
        else {
            System.out.println(cbook.getSize());
            int item = cbook.getSize();
            while (item > 0) {
                String s = cbook.getElementAt(item-1).toString();
                String[] ss = s.split(" - ");
                String isbn = ss[0].trim();
                String[] sss = ss[1].split(" by ");
                String bn = sss[0];
                line = line + cid + "\", \"" + isbn + "\", \"" + bn + "\")";
                if (item > 1 ) {
                    line = line + ", (\"";
                }
                cbook.removeElementAt(item-1);
                item--;
            }
            querytocart(line);
            cartList.setModel(cbook);
            JOptionPane.showMessageDialog(this, "Book(s) added to cart. Come see your checkout at Librarian Desk!");
        }
    }//GEN-LAST:event_checkoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(guicustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(guicustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(guicustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(guicustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new guicustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddtoCart;
    private javax.swing.JButton MainMenu;
    private javax.swing.JTextField avail;
    private javax.swing.JTextField bauthor;
    private javax.swing.JTextField bgenre;
    private javax.swing.JTable bidlist;
    private javax.swing.JTextField btitle;
    private javax.swing.JTextField byear;
    private javax.swing.JList<String> cartList;
    private javax.swing.JButton checkout;
    private javax.swing.JComboBox<String> genrebox;
    private javax.swing.JTextField isbn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField welcometop;
    // End of variables declaration//GEN-END:variables
}
